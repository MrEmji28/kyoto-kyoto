generator client {
  provider = "prisma-client-js"
} 

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Customer {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  firstName   String?
  lastName    String?
  phoneNumber String?  @unique
  address     String?
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders      Order[]
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELED
}

model Order {
  id          Int      @id @default(autoincrement())
  customerId  Int
  status      OrderStatus
  totalAmount Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  customer    Customer @relation(fields: [customerId], references: [id])
  items       OrderItem[]
  payments    Payment[]  // This indicates that an order can have many payments
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int
  menuItemId  Int
  quantity    Int
  price       Float

  order       Order    @relation(fields: [orderId], references: [id])
  menuItem    MenuItem @relation(fields: [menuItemId], references: [id])
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category    Category
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems  OrderItem[]
}

enum Category {
  Bento
  Ramen
  Sushi
  Drinks
}

model Payment {
  id             Int           @id @default(autoincrement())
  orderId        Int
  amount         Float
  paymentMethod  String
  paymentStatus  PaymentStatus
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  order          Order         @relation(fields: [orderId], references: [id])
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

